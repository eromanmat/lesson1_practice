

'''
   1) Что такое переменная ?

   Переменные предназначены для хранения данных. Название переменной в Python должно начинаться с алфавитного символа или со знака подчеркивания
   и может содержать алфавитно-цифровые символы и знак подчеркивания. И кроме того, название переменной не должно совпадать с названием ключевых 
   слов языка Python. Переменная - cсылка на ячейку памяти в оперативке.
   В пайтоне применяется два типа наименования переменных: camel case и underscore notation.
   Underscore notation подразумевает, что подслова в наименовании переменной разделяются знаком подчеркивания.
'''

"""
  2) Что такое тип данных ?

   Переменная хранит данные одного из типов данных. В Python существует множество различных типов данных.
   базовые типы: bool, int, float, complex и str.

  3) Какие типы данных ты знаешь ?

   Логические значения

   Тип bool представляет два логических значения: True (верно, истина) или False (неверно, ложь). Значение True служит для того, чтобы показать,
   что что-то истинно. Тогда как значение False, наоборот, показывает, что что-то ложно.

   Целые числа

   Тип int представляет целое число, например, 1, 4, 8, 50

   Дробные числа

   Тип float представляет число с плавающей точкой, например, 1.2 или 34.76. В качесте разделителя целой и дробной частей используется точка.

   Комплексные числа

   Тип complex представляет комплексные числа в формате вещественная_часть+мнимая_частьj - после мнимой части указывается суффикс j

   Строки

   Тип str представляет строки. Строка представляет последовательность символов, заключенную в одинарные или двойные кавычки,
    например "hello" и 'hello'.
    При использовани тройных одинарных кавычек не стоит путать их с комментариями: если текст в тройных одинарных кавычках присваивается переменной,
     то это строка, а не комментарий.

     Управляющие последовательности в строке

     Строка может содержать ряд специальных символов - управляющих последовательностей. Некоторые из них:

      \: позволяет добавить внутрь строки слеш

      \': позволяет добавить внутрь строки одинарную кавычку

      \": позволяет добавить внутрь строки двойную кавычку

      \n: осуществляет переход на новую строку

      \t: добавляет табуляцию (4 отступа)
      Внутри строки встречаются символы "\n", которые будут интерпретированы как управляющая последовательность.
      Чтобы избежать подобной ситуации, перед строкой ставится символ r

      Вставка значений в строку

      Python позволяет встравивать в строку значения других переменных. Для этого внутри строки переменные размещаются в фигурных скобках {},
       а перед всей строкой ставится символ f.

     4) Какие виды памяти есть в системе?

      Различают оперативную, регистровую, кэш- и внешнюю память.

    5) Что такое оперативная память ?

      Оперативная память (ОЗУ, англ. RAM, Random Access Memory — память с произвольным доступом) — это быстрое запоминающее устройство не очень
      большого объёма, непосредственно связанное с процессором и предназначенное для записи, считывания и хранения выполняемых программ и данных,
      обрабатываемых этими программами.

    6) Для чего нужна оперативная память ?

     Оперативная память используется только для временного хранения данных и программ, так как, когда машина выключается, все, что находилось в ОЗУ,
     пропадает. Доступ к элементам оперативной памяти прямой — это означает, что каждый байт памяти имеет свой индивидуальный адрес.

    7) Что такое машинный код ?

     Это система команд (набор кодов операций) конкретной вычислительной машины, которая интерпретируется непосредственно процессором 
     или микропрограммами этой вычислительной машины.

    8) Python - интерпретируемый или компилируемый языk  ?

     Pyhton это интерпретированный язык.

    9) Чем отличается компиляция от интерпретации

     Интерпрета́ция — построчный анализ, обработка и выполнение исходного кода программы или запроса.

     Компиляция - это когда сразу обрабатывается весь  исходный код и только потом выполняется. Без всей проверки не запустится!!!

    10) Распиши потоки ввода и вывода. Что это и для чего они. Какие есть

     print()

     Для вывода информации на консоль предназначена встроенная функция print(). При вызове этой функции ей в скобках передается выводимое значение.
     Отличительной особенностью этой функции является то, что по умолчанию она выводит значение на отдельной строке.

     end

     Этот параметр задает символы, которые добавляются в конце к выводимой строке. 

     input()

      В эту функцию передается приглашение к вводу. А результат ввода мы можем сохранить в переменную.
    
    11) Что такое преобразование типов данных и для чего они нужны?

      это преобразование объекта из одного типа данных в другой. Неявное преобразование типов автоматически выполняется интерпретатором Python
    
    12) Какие математические операции можно делать в питоне

     Python поддерживает все распространенные арифметические операции.
      +, -, /, // , *, **, %,
"""


"""
Практика
1) Сделать алгоритм опросник. Запрашивает у вас любую подрубную информацию, собирает ее, после чего красиво выводит (Креативность только в плюс)
"""

"""
name = input("Please enter you name:")
age = input("Please enter you age:")
city = input("Enter you city:")
hobby = input("What is your hobby?:")
food = input("What is your favorite dish?:")
status = input("What is your marital status:")
drink = input("Do you like to drink tea or coffee?:")
national = input("What is your nationality?:")
print("=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")
print("=-=-=-=",name,"тебе",age,"ты из города",city,"твое хобби",hobby,",любимое блюдо",food,",семейное положение",status,",любишь пить",drink,"и по на циональности ты",national,".С радостью говорю что ты счастливый человек:)))","=-=-=-=" )
print("=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")
"""

"""2) Предположим боту опроснику 10 лет, он запрашивает у вас имя и сколько лет вам. После чего выводит текст
» (Указанное имя), круто, ты старше меня на (Значения вычесленное вами)
"""

# Магические числа - это цифры в коде не привязанные не к чему.

"""
age_bot = 10
name = input("Enter oyu name:")
age = int(input("Enter you age:"))  #int('4')
age -= age_bot
print(name,"круто, ты старше меня на",age)
"""

"""
3) num = '4.5' преобразовать в число
"""


"""num = '4.5'
num = float(num)
print(num)"""

"""
4) num = 20 увеличить переменную еще на 20
"""

"""
num = 20
num *= 20
print(num)
"""

"""
5) num = 10 уменьшить переменную в 2 раза
"""

"""
num = 10
num /=2
print(num)
"""

"""
6) Запросить у пользователя 2 числа и произвести все математические операции и красиво отрисовать результат (Креативность только в плюс)
"""

"""
num1 = int(input("Enter you first number:"))
num2 = int(input("Enter you second number:"))
print("=-=-=-=-=-=-=-=-=-=-=")
print("=-=",num1 + num2)
print("=-=",num1 - num2)
print("=-=",num1 * num2)
print("=-=",round(num1 / num2,4))
print("=-=",num1 // num2)
print("=-=",num1 ** num2,")
print("=-=",num1 % num2)
print("=-=-=-=-=-=-=-=-=-=-=")
"""

"""
7)Запрашиваем у пользователя возраст и выводим в консоль, совершеннолетний он или нет
"""

"""
age = int(input("Please enter you age:"))
num = 18
num1 = 65
if age >= num :
    print("Поздравляю ты совершенолетний")
    if age>= num1 :
        print("Тебе пора на пенсию")
else:
    print("Поздравляю ты не совершенолетний")
"""



